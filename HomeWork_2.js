//ЗАДАНИЕ 1
var a = 1,
  b = 1,
  c,
  d;
c = ++a;
alert(c); //++ - это унарная операция инкримент, увеличивающая значение переменной на 1, в случае числовых значений. Инкремент не только возвращает значение переменной, но и изменяет его. Данный инкремент является префиксным, и эта строка эквивалентна коду a = a+1; var c=a. Т.к. переменная a уже хранила значение 1, и инкремент еще прибавил 1, в итоге получили значение 2

d = b++;
alert(d); // Данный инкремент является постфиксным, и эта строка эквивалентна коду var d=b; d = d+1;. Префиксный инкремент сначала возвращает значение переменной b до ее увеличения на 1, после этого d присвается b. Т.о. в итоге получается значение 1

c = 2 + ++a;
alert(c); //Результат = 5, так как в скобках приведена математическая операция 2 плюс префиксный инкримент переменной a, который на этот момент равен 3 (значение 2 хранилось в переменной а с предыдущего возврата, и текущий инкремент добавил еще 1)

d = 2 + b++;
alert(d); // Результат = 4, так как математическая операция выглядит следующим образом - 2 плюс постфиксный инкрмент переменной b, который на момент иттерации равен 2 (переменная b на предыдущем выводе хранила в себе значение 1, постинкримент изменил ее значение до увеличения, а затем увеличил на 1)

alert(a); // Результат равен 3, т.к. 1 присвоилась переменной при ее объявлении + 1 увеличился пре-инкриментом на строке 2 + 1 увеличился пре-инкриментов на строке 6

alert(b); // Результат равен 3, т.к. т.к. 1 присвоилась переменной при ее объявлении + 0 на строке 4  + 2 на строке 8
//_____________________________________________

//ЗАДАНИЕ 2
var a = 2;
var x = 1 + (a *= 2); //*= это оператор присваивания с умножением. Конструкция имеет смысл как x = 1 + (2 * 2). Т.о. результат будет равен 5
//_____________________________________________

//ЗАДАНИЕ 3
//Функция для генерации случайного числа в диапазоне от -100 до 100
function getRandom(min, max) {
  min = -100;
  max = 100;
  return Math.floor(Math.random() * (max - min)) + min;
}
// Запись случайно сгенерированных чисел в переменные
let a = getRandom();
let b = getRandom();
console.log(a, b);

if (a && b >= 0 && a < b) {
  // если оба сгенерированных числа положительные, то вывести их разность

  console.log(b - a);
} else if (a && b < 0) {
  // если оба сгенерированных числа отрицательные, то вывести их произведение
  console.log(a * b);
} else a >= 0 || (a < 0 && b >= 0) || b < 0; // если сгенерированные числа разных знаков, то вывести их сумму
console.log(a + b);
//______________________________________________

//ЗАДАНИЕ 4
//Функция для генерации случайного числа в диапазоне от -100 до 100
function getRandom(min, max) {
  min = 0;
  max = 15;
  return Math.floor(Math.random() * (max - min)) + min;
}
// Запись случайно сгенерированных чисел в переменные
let a = getRandom();
console.log(a);
switch (a) {
  case 0:
    document.write(a + " ");
    a++;

  case 1:
    document.write(a + " ");
    a++;

  case 2:
    document.write(a + " ");
    a++;

  case 3:
    document.write(a + " ");
    a++;

  case 4:
    document.write(a + " ");
    a++;

  case 5:
    document.write(a + " ");
    a++;

  case 6:
    document.write(a + " ");
    a++;

  case 7:
    document.write(a + " ");
    a++;

  case 8:
    document.write(a + " ");
    a++;

  case 9:
    document.write(a + " ");
    a++;

  case 10:
    document.write(a + " ");
    a++;

  case 11:
    document.write(a + " ");
    a++;

  case 12:
    document.write(a + " ");
    a++;

  case 13:
    document.write(a + " ");
    a++;

  case 14:
    document.write(a + " ");
    a++;

  case 15:
    document.write(a + " ");
    a++;
}
//__________________________________________________

//ЗАДАНИЕ 5
//Сложение
function addit(arg1, arg2) {
  return arg1 + arg2;
}
var x = addit(14, 5);
console.log(x);

//Вычитание
function subtr(arg1, arg2) {
  return arg1 - arg2;
}
var x = subtr(14, 5);
console.log(x);

//Умножение
function multip(arg1, arg2) {
  return arg1 * arg2;
}
var x = multip(14, 5);
console.log(x);

//Деление
function divis(arg1, arg2) {
  return arg1 / arg2;
}
var x = divis(14, 5);
console.log(x);
//______________________________________________

//ЗАДАНИЕ 6
//Сложение
function addit(arg1, arg2) {
  return arg1 + arg2;
}
//Вычитание
function subtr(arg1, arg2) {
  return arg1 - arg2;
}
//Умножение
function multip(arg1, arg2) {
  return arg1 * arg2;
}
//Деление
function divis(arg1, arg2) {
  return arg1 / arg2;
}

var arg1 = +prompt("Введите первое число");
if (isNaN(arg1)) {
  alert("Это не число!");
}

var arg2 = +prompt("Введите второе число");
if (isNaN(arg2)) {
  alert("Это не число!");
}

var oper = prompt("Выберите математическую операцию: + - * /");
switch (oper) {
  case "+":
    alert("Результат: " + addit(arg1, arg2));
    break;
  case "-":
    alert("Результат: " + subtr(arg1, arg2));
    break;
  case "*":
    alert("Результат: " + multip(arg1, arg2));
    break;
  case "/":
    alert("Результат: " + divis(arg1, arg2));
    break;
  default:
    alert("Вы ввели неверный символ");
}

//ЗАДАНИЕ 7
null > 0; //false
null < 0; //false
// ДЛя определения истинно или ложно выражение, значения проходят через абстрактный алгоритм сравнения отношений в соответствии со спецификацией ЕСМА. Для этих выражений алгоритм начинает действовать с 4-5 шага когда null преобразовывается до типа number и приобретает значение +0, а 0 из правой части сравнения так и остается нулем. Следующая остановка в алгоритме - это шаг 8 - когда значение слева и значение справа являются одинаковыми значениями возвращать false

null == 0; //false
//В данном случае используется абстрактный алгоритм сравнения равенств, оператор == возвращает либо true либо false. Алгоритм начинает действовать сразу с шага 14, т.к. в сравнении отличаются типы данных. Однако вплоть до 22 шага алгоритм также пропускается, т.к. первое значение null. И 22 шаг строго предписывает вернуть значение null

null >= 0; //true
//Согласно спецификации это можно объяснить как "Если null < 0 принимает значение false, то null >= 0 принимает значение true"
//_______________________________________

//Задание 8

function power(val, pow) {
  var res = val;
  for (let i = 1; i < pow; i++) {
    res *= val;
  }
  return res;
}

let result = power(2, 5);
console.log(result);
